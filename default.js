var defaultHash = "eyJzb3VyY2UiOiIvKiBTaW1wbGUgZW50aXR5IHdpdGggYSBzdHJpbmcgdmFsdWUgKi9cbjxsMjBuIFwiTDIwblwiPlxuXG4vKiBSZWZlcmVuY2UgdG8gYW4gZW50aXR5ICovXG48d2VsY29tZSBcIldlbGNvbWUgdG8ge3sgbDIwbiB9fSFcIj5cblxuLyogTXVsdGlsaW5lIHN0cmluZyAqL1xuPGRlc2MgXCJcIlwiXG4gIHt7IGwyMG4gfX0gaXMgYSBkb21haW4tc3BlY2lmaWMgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VcbiAgZGVzaWduZWQgZm9yIGxvY2FsaXphdGlvbi4gIEVhc3kgdGhpbmdzIGFyZSBlYXN5LCBcbiAgYW5kIGNvbXBsZXggdGhpbmdzIGFyZSBwb3NzaWJsZS5cblwiXCJcIj5cblxuLyogSGFzaCB2YWx1ZSB3aGljaCBkb2Vzbid0IGB0b1N0cmluZygpYCBncmFjZWZ1bGx5LCBidXQgaXMgdmFsaWQuXG4gKiBIZW5jZSB0aGUgSW5kZXhFcnJvci5cbiAqL1xuPG5hbWUge1xuICBzaG9ydDogXCJ7eyBsMjBuIH19XCIsXG4gIGxvbmc6IFwiTG9jYWxpemF0aW9uIDIuMFwiXG59PlxuXG4vKiBSZWZlcmVuY2UgdG8gYSBtZW1iZXIgdmFsdWUgb2YgYSBoYXNoICovXG48YWJvdXQgXCJ7eyBuYW1lLnNob3J0IH19IHN0YW5kcyBmb3Ige3sgbmFtZS5sb25nIH19XCI+XG5cbi8qIEJldHRlciBoYXNoIHZhbHVlIHdpdGggYSBkZWZhdWx0IGluZGV4ICovXG48YmV0dGVyTmFtZVtcInNob3J0XCJdIHtcbiAgc2hvcnQ6IFwie3sgbDIwbiB9fVwiLFxuICBsb25nOiBcIkxvY2FsaXphdGlvbiAyLjBcIlxufT5cblxuLyogU2hvcnRjdXQgbm90YXRpb24gZm9yIGEgZGVmYXVsdCBpbmRleDogYSBjYXRjaC1hbGwgbWVtYmVyICgqKSAqL1xuPGV2ZW5CZXR0ZXJOYW1lIHtcbiAqc2hvcnQ6IFwie3sgbDIwbiB9fVwiLFxuICBsb25nOiBcIkxvY2FsaXphdGlvbiAyLjBcIlxufT5cblxuLyogYGV2ZW5CZXR0ZXJOYW1lYCBpcyBub3cgdGhlIHNhbWUgYXMgYGV2ZW5CZXR0ZXJOYW1lLnNob3J0YCAqL1xuPGJldHRlckFib3V0IFwiXCJcIlxuICB7eyBldmVuQmV0dGVyTmFtZSB9fSBzdGFuZHMgZm9yIHt7IGV2ZW5CZXR0ZXJOYW1lLmxvbmcgfX0uXG5cIlwiXCI+XG5cbi8qIEF0dHJpYnV0ZXMgc3RvcmUgbWV0YS1pbmZvcm1hdGlvbiBkZXNjcmliaW5nIHRoZSBlbnRpdHkuXG4gKiBOb3RlIHRoYXQgdGhleSdyZSBkaWZmZXJlbnQgZnJvbSBoYXNoIHZhbHVlJ3MgbWVtYmVycyBcbiAqIChgc2hvcnRgIGFuZCBgbG9uZ2ApLlxuICovXG48dGlua2VyIHtcbiAqc2hvcnQ6IFwiVGlua2VyXCIsXG4gIGxvbmc6IFwiTDIwbiB0aW5rZXJcIlxuIH1cbiB2ZXJzaW9uOiBcInRlc3RpbmdcIlxuPlxuXG4vKiBBY2Nlc3MgYXR0cmlidXRlcyB3aXRoIHRoZSBkb3VibGUtY29sbyBub3RhdGlvbi4gIFlvdSBjYW4gc3RpbGwgdXNlIFxuICogdGhlIHNpbmdsZS1kb3Qgbm90YXRpb24gdG8gYWNjZXNzIGhhc2ggbWVtYmVycy4gXG4gKi9cbjxjb2xvcGhvblt0aW5rZXI6OnZlcnNpb25dIHtcbiAgcHJvZHVjdGlvbjogXCJ7eyB0aW5rZXIubG9uZyB9fSBpcyBzdGFibGUuICBUaGVyZSBhcmUgbm8gYnVncyFcIixcbiAgdGVzdGluZzogXCJ7eyB0aW5rZXIubG9uZyB9fSBpcyBzdGlsbCBpbiBkZXZlbG9wbWVudC4gIEV4cGVjdCBidWdzLlwiXG59PlxuXG4vKiBSZWZlcmVuY2UgdG8gYSBkZXZlbG9wZXItcHJvdmlkZWQgdmFyaWFibGUgKi9cbjxtZXNzYWdlcyBcIk1lc3NhZ2VzIGZyb20ge3sgJG5ldy5mcm9tVXNlci5uYW1lIH19XCI+XG5cbi8qIFVzZSBhIHZhcmlhYmxlIGluIHRoZSBpbmRleCAqL1xuPG5vdGlmeVskbmV3LmZyb21Vc2VyLmdlbmRlcl0ge1xuICBtYXNjdWxpbmU6IFwiSGUgc2VudCB5b3Uge3sgJG5ldy5tc2dzIH19IG5ldyBtZXNzYWdlKHMpLlwiLFxuICBmZW1pbmluZTogXCJTaGUgc2VudCB5b3Uge3sgJG5ldy5tc2dzIH19IG5ldyBtZXNzYWdlKHMpLlwiLFxuICp1bmtub3duOiBcInt7ICRuZXcubXNncyB9fSBuZXcgbWVzc2FnZXMocykuXCJcbn0+XG5cbi8qIE1hY3JvIGFuZCBhIG1hY3JvIGNhbGwgdG8gd2hpY2ggYSB2YXJpYWJsZSBpcyBwYXNzZWQgKi9cbjxwbHVyYWwoJG4pIHsgJG4gPT0gMCA/IFwiemVyb1wiIDogXG4gICAgICAgICAgICAgICAgJG4gPT0gMSA/IFwib25lXCIgOiBcIm1hbnlcIiB9PlxuPGJldHRlck5vdGlmeVtwbHVyYWwoJG5ldy5tc2dzKSwgJG5ldy5mcm9tVXNlci5nZW5kZXJdIHtcbiAgemVybzogXCJObyBuZXcgbWVzc2FnZXMuXCIsXG4gIG9uZToge1xuICAgIG1hc2N1bGluZTogXCJIZSBzZW50IHlvdSBvbmUgbWVzc2FnZS5cIixcbiAgICBmZW1pbmluZTogXCJTaGUgc2VudCB5b3Ugb25lIG1lc3NhZ2UuXCIsXG4gICAqdW5rbm93bjogXCJPbmUgbmV3IG1lc3NhZ2UuXCJcbiAgfSxcbiAgbWFueToge1xuICAgIG1hc2N1bGluZTogXCJIZSBzZW50IHlvdSB7eyAkbmV3Lm1zZ3MgfX0gbWVzc2FnZXMuXCIsXG4gICAgZmVtaW5pbmU6IFwiU2hlIHNlbnQgeW91IHt7ICRuZXcubXNncyB9fSBtZXNzYWdlcy5cIixcbiAgICp1bmtub3duOiBcInt7ICRuZXcubXNncyB9fSBuZXcgbWVzc2FnZXMuXCJcbiAgfVxufT5cblxuLyogU2ltcGxlIGdsb2JhbCAqL1xuPHlvdXJPUyBcIllvdXIgT1MgaXMge3sgQG9zIH19LlwiPlxuXG4vKiBIYXNoIHZhbHVlIHVzaW5nIGEgZ2xvYmFsIGluIHRoZSBpbmRleCAqL1xuPG9wdGlvbnNbQG9zXSB7XG4gIHdpbjogXCJTZXR0aW5nc1wiLFxuICBsaW51eDogXCJQcmVmZXJlbmNlc1wiLFxuICBtYWM6IFwiUHJlZmVyZW5jZXNcIlxufT5cblxuLyogU2FtZSBhcyBhYm92ZSBidXQgd2l0aCBhIGNhdGNoLWFsbCBmb3IgVW5peC1saWtlIHN5c3RlbXMgKi9cbjxiZXR0ZXJPcHRpb25zW0Bvc10ge1xuICB3aW46IFwiU2V0dGluZ3NcIixcbiAqbml4OiBcIlByZWZlcmVuY2VzXCJcbn0+XG5cbi8qIE1hY3JvIGFuZCBhIG1hY3JvIGNhbGwgdG8gd2hpY2ggYSBnbG9iYWwgaXMgcGFzc2VkICovXG48dGltZU9mRGF5KCRoKSB7ICRoIDwgNiA/IFwibmlnaHRcIiA6XG4gICAgICAgICAgICAgICAgICAgJGggPCAxMiA/IFwibW9ybmluZ1wiIDpcbiAgICAgICAgICAgICAgICAgICAgICRoIDwgMTggPyBcImFmdGVybm9vblwiIDpcbiAgICAgICAgICAgICAgICAgICAgICAgXCJldmVuaW5nXCIgfT5cbjxncmVldGluZ1t0aW1lT2ZEYXkoQGhvdXIpXSB7XG4gIG1vcm5pbmc6IFwiR29vZCBtb3JuaW5nIVwiLFxuICBhZnRlcm5vb246IFwiR29vZCBhZnRlcm5vb24hXCIsXG4gIGV2ZW5pbmc6IFwiR29vZCBldmVuaW5nIVwiLFxuICpvdGhlcjogXCJPIGhhaSFcIlxufT5cblxuLyogUmVzcG9uc2l2ZSBsb2NhbGl6YXRpb25cbiAqID09PT09PT09PT09PT09PT09PT09PT09XG4gKiBSZXNpemUgdGhlIGJyb3dzZXIgd2luZG93IG9yIHVzZSB0aGUgUmVzcG9uc2l2ZSBEZXNpZ24gVmlld1xuICogdG8gc2VlIGhvdyB0aGUgdmFsdWUgb2YgdGhlIGBkYXRhYCBzdHJpbmcgY2hhbmdlcy5cbiAqL1xuXG4vKiBEZWZpbmUgYSBtYWNybyB3aGljaCByZXR1cm5zIGEgaHVtYW4tcmVhZGFibGUgbGFiZWxcbiAqIGZvciB0aGUgY3VycmVudCBzY3JlZW4gd2lkdGguXG4gKi9cbjxpc1dpZGUoJG4pIHsgJG4ud2lkdGggPCA0ODAgPyBcInBvcnRyYWl0UGhvbmVcIiA6XG4gICAgICAgICAgICAgICAgJG4ud2lkdGggPCA3NjggPyBcImxhbmRzY2FwZVBob25lXCIgOlxuICAgICAgICAgICAgICAgICAgJG4ud2lkdGggPCA5ODAgPyBcImxhbmRzY2FwZVRhYmxldFwiIDogXG4gICAgICAgICAgICAgICAgICAgICRuLndpZHRoIDwgMTIwMCA/IFwiZGVza3RvcFwiIDogXG4gICAgICAgICAgICAgICAgICAgICAgXCJsYXJnZVwiIH0+XG5cbi8qIENhbGwgdGhlIGBpc1dpZGVgIG1hY3JvIGFuZCBwYXNzIHRoZSBnbG9iYWwgYEBzY3JlZW5gIG9iamVjdC4gXG4gKiBOb3RlIGhvdyB0aGUgYXN0ZXJpc2sgZGVub3RlcyB0aGUgY2F0Y2gtYWxsIGZvciBtYWNybyByZXR1cm4gXG4gKiB2YWx1ZXMgdGhhdCBhcmUgbm90IGV4cGxpY2l0bHkgZGVmaW5lZCBpbiB0aGUgaGFzaCB0YWJsZS5cbiAqL1xuPGRhdGFbaXNXaWRlKEBzY3JlZW4pXSB7XG4gKndpZGU6IFwiRGF0YSBDb25uZWN0aW9uIFNldHRpbmdzXCIsXG4gIGxhbmRzY2FwZVBob25lOiBcIkRhdGEgU2V0dGluZ3NcIixcbiAgcG9ydHJhaXRQaG9uZTogXCJEYXRhXCJcbn0+IiwiY29udGV4dCI6IntcbiAgXCJuZXdcIjoge1xuICAgICAgXCJmcm9tVXNlclwiOiB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiSmFuZVwiLFxuICAgICAgICAgIFwiZ2VuZGVyXCI6IFwiZmVtaW5pbmVcIlxuICAgICAgfSxcbiAgICAgIFwibXNnc1wiOiAzXG4gIH1cbn0ifQ==";
